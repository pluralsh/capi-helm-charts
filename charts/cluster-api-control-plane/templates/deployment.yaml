apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-api-control-plane.fullname" . }}-controller-manager
  labels:
    cluster.x-k8s.io/provider: control-plane-kubeadm
    control-plane: controller-manager
  {{- include "cluster-api-control-plane.labels" . | nindent 4 }}
  {{- with .Values.controllerManager.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.controllerManager.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: control-plane-kubeadm
      control-plane: controller-manager
    {{- include "cluster-api-control-plane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: control-plane-kubeadm
        control-plane: controller-manager
      {{- include "cluster-api-control-plane.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - --leader-elect
        - --diagnostics-address={{ .Values.configVariables.capiDiagnosticsAddress }}
        - --insecure-diagnostics={{ .Values.configVariables.capiInsecureDiagnostics }}
        - --feature-gates=ClusterTopology={{ .Values.configVariables.clusterTopology }},KubeadmBootstrapFormatIgnition={{ .Values.configVariables.exprimental.kubeadmBootstrapFormatIgnition }}
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      nodeSelector: {{- toYaml .Values.controllerManager.nodeSelector | nindent 8 }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "cluster-api-control-plane.managerServiceAccountName" . }}
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          secretName: capi-kubeadm-control-plane-webhook-service-cert