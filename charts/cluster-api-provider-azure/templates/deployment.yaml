apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-api-provider-azure.fullname" . }}-controller-manager
  labels:
    aadpodidbinding: capz-controller-aadpodidentity-selector
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
  {{- include "cluster-api-provider-azure.labels" . | nindent 4 }}
  {{- with .Values.controllerManager.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.controllerManager.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-azure
      control-plane: capz-controller-manager
    {{- include "cluster-api-provider-azure.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        aadpodidbinding: capz-controller-aadpodidentity-selector
        azure.workload.identity/use: "true"
        cluster.x-k8s.io/provider: infrastructure-azure
        control-plane: capz-controller-manager
      {{- include "cluster-api-provider-azure.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --metrics-bind-addr=localhost:8080
        - --feature-gates=MachinePool={{ .Values.configVariables.exprimental.machinePool }},AKSResourceHealth={{ .Values.configVariables.exprimental.aksResourceHealth }},EdgeZone={{ .Values.configVariables.exprimental.edgezone }}
        - --v=0
        env:
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: subscription-id
              name: {{ include "cluster-api-provider-azure.fullname" . }}-manager-bootstrap-credentials
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: tenant-id
              name: {{ include "cluster-api-provider-azure.fullname" . }}-manager-bootstrap-credentials
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: {{ include "cluster-api-provider-azure.fullname" . }}-manager-bootstrap-credentials
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: {{ include "cluster-api-provider-azure.fullname" . }}-manager-bootstrap-credentials
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /var/run/secrets/azure/tokens
          name: azure-identity-token
          readOnly: true
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      nodeSelector: {{- toYaml .Values.controllerManager.nodeSelector | nindent 8 }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "cluster-api-provider-azure.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capz-webhook-service-cert
      - name: azure-identity-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: api://AzureADTokenExchange
              expirationSeconds: 3600
              path: azure-identity-token