asoControllerManager:
  annotations: {}
  kubeRbacProxy:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.13.1
    resources:
      limits: {}
      requests: {}
  labels: {}
  manager:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
    image:
      repository: mcr.microsoft.com/k8s/azureserviceoperator
      tag: v2.3.0
    imagePullPolicy: Always
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 256Mi
  nodeSelector:
    kubernetes.io/os: linux
  replicas: 1
asoControllerManagerMetricsService:
  ports:
    - name: metrics
      port: 8080
      targetPort: 0
  type: ClusterIP
asoControllerSettings:
  azureClientId: ""
  azureSubscriptionId: ""
  azureTenantId: ""
  azureClientSecret: ""
asoProxyService:
  ports:
    - name: https
      port: 8443
      targetPort: https
  type: ClusterIP
asoWebhookService:
  ports:
    - port: 443
      targetPort: 9443
  type: ClusterIP
capzControllerManager:
  annotations: {}
  labels: {}
  manager:
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      runAsGroup: 65532
      runAsUser: 65532
    image:
      repository: registry.k8s.io/cluster-api-azure/cluster-api-azure-controller
      tag: v1.11.3
    imagePullPolicy: IfNotPresent
    resources:
      limits: {}
      requests: {}
  nodeSelector: {}
  replicas: 1
capzNmi:
  annotations: {}
  labels: {}
  nmi:
    containerSecurityContext:
      capabilities:
        add:
          - DAC_READ_SEARCH
          - NET_ADMIN
          - NET_RAW
        drop:
          - ALL
      runAsUser: 0
    env:
      forcenamespaced: "true"
      logLevel: DEBUG
    image:
      repository: mcr.microsoft.com/oss/azure/aad-pod-identity/nmi
      tag: v1.8.14
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
  nodeSelector:
    kubernetes.io/os: linux
capzWebhookService:
  ports:
    - port: 443
      targetPort: webhook-server
  type: ClusterIP
configVariables:
  exprimental:
    aksResourceHealth: false
    edgezone: false
    machinePool: false
crds:
  create: true
imagePullSecrets: []
kubernetesClusterDomain: cluster.local
serviceAccounts:
  asoDefault:
    annotations: {}
    create: true
    labels: {}
    name: ""
  capzManager:
    annotations: {}
    create: true
    labels: {}
    name: ""
nameOverride: capz
fullnameOverride: ""
bootstrapMode: true
