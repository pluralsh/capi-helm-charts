apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-api-provider-gcp.fullname" . }}-controller-manager
  labels:
    cluster.x-k8s.io/provider: infrastructure-gcp
    control-plane: capg-controller-manager
  {{- include "cluster-api-provider-gcp.labels" . | nindent 4 }}
  {{- with .Values.controllerManager.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with .Values.controllerManager.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-gcp
      control-plane: capg-controller-manager
    {{- include "cluster-api-provider-gcp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-gcp
        control-plane: capg-controller-manager
      {{- include "cluster-api-provider-gcp.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --feature-gates=GKE={{ .Values.configVariables.exprimental.capgGke }}
        - --metrics-bind-addr=localhost:8080
        - --v={{ .Values.configVariables.capgLoglevel }}
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: {{ quote .Values.controllerManager.manager.env.googleApplicationCredentials }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /home/.gcp
          name: credentials
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      nodeSelector: {{- toYaml .Values.controllerManager.nodeSelector | nindent 8 }}
      serviceAccountName: {{ include "cluster-api-provider-gcp.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capg-webhook-service-cert
      - name: credentials
        secret:
          secretName: {{ include "cluster-api-provider-gcp.fullname" . }}-manager-bootstrap-credentials